names(Boston)
library (MASS)
names(Boston)
data("Boston")
str("Boston")
dim("Boston")
library("data.table", lib.loc="~/R/win-library/3.4")
datatable (Boston)
data.table (Boston)
data.table (Boston ,rownames = FALSE)
library (MASS)
names(Boston)
data.table (Boston ,rownames = FALSE)
data("Boston")
str("Boston")
dim("Boston")
summury ("Boston")
summary ("Boston")
pairs("Boston")
cor_matrix<-cor(Boston)
View(Boston)
View(Boston)
cor_matrix()
print (cor_matrix)
View(cor_matrix)
View(Boston)
corrplot(cor_matrix, method="circle")
library('corrplot')
library("corrplot")
library(corrplot)
corrplot(cor_matrix, method="circle")
install.library(corrplot)
library(corrplot)
library(corrplot)
citation("corrplot")
ibrary(corrplot)
citation("corrplot")
corrplot(cor_matrix, method="circle")
library(corrplot)
citation("corrplot")
corrplot(cor_matrix, method="circle")
library(corrplot)
install.packages(corrplot)
install.packages("corrplot")
library("corrplot", lib.loc="~/R/win-library/3.4")
citation("corrplot")
corrplot(cor_matrix, method="circle")
corrplot(cor_matrix, method = "square")
corrplot(cor_matrix, method="circle")
summary ("Boston")
summary("cor_matrix")
data_column %>% summary(cor_matrix)
data_column %>% summary()
cor_matrix<-cor(Boston) %>% round(digits = 2)
View(cor_matrix)
cor_matrix<-cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot(cor_matrix, method="circle", type="upper", cl.pos="b", tl.pos="d", tl.cex = 0.6)
test_function("round", args = "digits",incorrect_msg = "Did you use the first two digits in rounding?")
test_error()
success_msg("Good work!")
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
View(boston_scaled)
summary(boston_scaled$crim)
summary(boston_scaled$crim)
bins <- quantile(boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
View(boston_scaled)
View(Boston)
View(cor_matrix)
View(boston_scaled)
crime <- cut(boston_scaled$crim, breaks = train, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
View(boston_scaled)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
plot(bi.lda.fit, dimen = 2, col = classes, pch = classes)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
fit.lda <- lda(Direction ~ Lag2, data = Weekly, subset = train)
fit.lda
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.fit <- lda(crime ~ ., data = train)
lda.fit
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled$crim)
bins <- quantile(boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
View(lda.fit)
da.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library(MASS)
data('Boston')
dist_eu <- dist(Boston)
summary(dist_eu)
dist_man <- dist(Boston, method = 'manhattan')
summary(dist_man)
km <-kmeans(Boston, centers = 3)
pairs(Boston, col = km$cluster)
set.seed(123)
k_max <- 2
twcss <- sapply(1:k_max, function(k){kmeans(Boston, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = 'line')
km <-kmeans(Boston, centers = 2)
pairs(Boston, col = km$cluster)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
View(gii)
View(hd)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
sumary(gii)
summary(hd)
summary(gii)
library("dplyr", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
f_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note
options(StringsAsFactors=FALSE)
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
f_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
f_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
df_all = tbl_df(read.csv("input/Gender_Inequality_Index.csv", col.names=gii_cols,
na.strings='..'))
df_all = tbl_df(read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv', col.names=gii_cols,
na.strings='..'))
f_all = df_all %>% select(-hdi_rank, -seats_
df_all = tbl_df(read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv', col.names=gii_cols,
na.strings='..'))
f_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv', col.names=gii_cols,
na.strings='..'))
f_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
View(hd)
View(gii)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index..gii.csv', col.names=gii_cols,
na.strings='..'))
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.gii.csv', col.names=gii_cols,
na.strings='..'))
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
options(StringsAsFactors=FALSE)
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
df_all = tbl_df(read.csv('Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
options(StringsAsFactors=FALSE)
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
)
df_all = tbl_df(read.csv('input/Gender_Inequality_Index.csv', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('input/GStunting4.csv', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('input/gender_inequality.csv', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
options(StringsAsFactors=FALSE)
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
)
df_all = tbl_df(read.csv('input/gender_inequality.csv', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('gender_inequality.csv', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
df_all = tbl_df(read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv"', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
options(StringsAsFactors=FALSE)
gii_cols = c(
"hdi_rank", "country", "GII_2012", "maternal_mortality_ratio",
"adolescent_fertility_rate_gii", "seats_parlim_female_gii",
"seats_parlim_female_note", "secondary_education_female",
"secondary_education_female_note", "secondary_education_male",
"secondary_education_male_note", "labor_participation_female_gii",
"labor_participation_male_gii"
)
df_all = tbl_df(read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv"', col.names=gii_cols,
na.strings='..'))
df_all = df_all %>% select(-hdi_rank, -seats_parlim_female_note,
-secondary_education_female_note,
-secondary_education_male_note)
View(df_all)
inner_join(hd,gii)
View(gii)
human <- inner_join(hd,gii)
country <- inner_join(hd,gii)
inner_join(hd,gii)
rownames(df_all) = df_all$country
region_info = read.delim('input/ISO-3166-Countries-with-Regional-Codes.csv')
region_names = read.csv('input/georegion.csv')
region_info$region = region_names$Region[match(region_info$region.code,
region_names$M49.numeric.code)]
regions = region_info$region[match(df_all$country, region_info$name)]
country_names = as.character(df_all$country)
df_all = df_all %>% select(-country)
inner_join(hd,gii)
rownames(df_all) = df_all$country
region_info = read.delim('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv')
region_names = read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv')
region_info$region = region_names$Region[match(region_info$region.code,
region_names$M49.numeric.code)]
regions = region_info$region[match(df_all$country, region_info$name)]
country_names = as.character(df_all$country)
df_all = df_all %>% select(-country)
View(region_info)
View(region_names)
df_all = df_all %>% select(country)
df_all = df_all %>% select(-Country)
regions = region_info$region[match(df_all$Country, region_info$name)]
country_names = as.character(df_all$Country)
df_all = df_all %>% select(Country)
View(df_all)
View(country)
View(region_info)
View(region_names)
regions = region_info$region[match(df_all$Country, region_info$name)]
country_names = as.character(df_all$Country)
df_all = df_all %>% select(Country)
View(region_names)
rownames(df_all) = df_all$Country
region_info = read.delim('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv')
region_names = read.csv('http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv')
region_info$region = region_names$Region[match(region_info$region.code,
region_names$M49.numeric.code)]
regions = region_info$region[match(df_all$Country, region_info$name)]
country_names = as.character(df_all$Country)
df_all = df_all %>% select(Country)
call(human)
human <-df_all
call(human)
call(human)
call(-human)
print("Number of missing df_allapoints for each variable:")
print("Number of missing df_allapoints for each variable:")
apply(df_all, 2, function (x) {sum(is.na(x))})
print("Number of missing df_allapoints for each variable:")
apply(df_all, 2, function (x) {sum(is.na(x))})
print("Countries with missing data:")
country_names[!complete.cases(df_all)]
human <-df_all
View(human)
library("dbplyr", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
names(human)
library(stringr)
str(human$GNI)
str_replace(human$GNI, pattern=",", replace ="") %>% as.numeric
View(human)
View(human)
library("GGally", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
names(human)
library(stringr)
str(human$GNI)
str_replace(human$GNI, pattern=",", replace ="") %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
tail(human, 10)
last <- nrow(human) - 7
human_ <- human[1:last, ]
rownames(human) <- human$Country
human_ <- select(human, -Country)
library(GGally)
ggpairs(human_)
cor(human_) %>% corrplot
library(GGally)
library(ISLR)
ggpairs(human_)
cor(human_) %>% corrplot
library("GGally", lib.loc="~/R/win-library/3.4")
install.packages("GGally")
install.packages("GGally")
library("GGally", lib.loc="~/R/win-library/3.4")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
library("dbplyr", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
ggpairs(human_)
cor(human_) %>% corrplot
ggpairs(human_)
cor(human_) %>% corrplot
library(corrplot)
cor(human_) %>% corrplot
install.packages("corrplot")
install.packages("corrplot")
library("corrplot", lib.loc="~/R/win-library/3.4")
cor(human_) %>% corrplot
nstall.packages("corrplot")
cor(human_) %>% corrplot
install.packages("corrplot")
cor(human_) %>% corrplot
install.packages("corrplot")
cor(human_) %>% corrplot
library("corrplot", lib.loc="~/R/win-library/3.4")
cor(human_) %>% corrplot
ggpairs(human_)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
names(human)
library(stringr)
str(human$GNI)
str_replace(human$GNI, pattern=",", replace ="") %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
tail(human, 10)
last <- nrow(human) - 7
human_ <- human[1:last, ]
rownames(human) <- human$Country
human_ <- select(human, -Country)
install.packages("GGally")
ggpairs(human_)
install.packages("corrplot")
cor(human_) %>% corrplot
install.packages("GGally")
install.packages("corrplot")
ordered.df <- df[order(df$row.names),]
ordered.df <- df[order(df$row.names),]
ordered.df <- df[order(df$human_),]
ordered.df <- df[order(df$human_),country_names]
View(lda.fit)
View(km)
samp %>% remove_rownames %>% column_to_rownames(var="names")
cor(human_) %>% corrplot
ggpairs(human_)
install.packages("corrplot")
cor(human_) %>% corrplot
install.packages("corrplot")
human_ <- select(human, -Country)
library("dplyr", lib.loc="~/R/win-library/3.4")
library("GGally", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("corrplot", lib.loc="~/R/win-library/3.4")
ggpairs(human_)
install.packages("corrplot")
cor(human_) %>% corrplot
install.packages("corrplot")
